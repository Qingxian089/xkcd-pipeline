x-airflow-common: &airflow-common
  build: .
  env_file: .env
  environment:
    - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR}
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
    - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
    - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
    - AIRFLOW__CORE__LOAD_EXAMPLES=${AIRFLOW__CORE__LOAD_EXAMPLES}
    - AIRFLOW_HOME=/opt/airflow
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/logs:/opt/airflow/logs
    - ./dbt/xkcd_analytics:/opt/airflow/dbt/xkcd_analytics
  user: "${AIRFLOW_UID}:0"
  networks:
    - airflow-network

services:
  # Airflow Services
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.org
      "
    depends_on:
      airflow-db:
        condition: service_healthy
      xkcd-db:
        condition: service_healthy

  # Airflow Core Database
  airflow-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_AIRFLOW_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AIRFLOW_PASSWORD}
      - POSTGRES_DB=${POSTGRES_AIRFLOW_DB}
    ports:
      - "5432:5432"
    volumes:
      - airflow-db-data:/var/lib/postgresql/data
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_AIRFLOW_USER} -d ${POSTGRES_AIRFLOW_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # XKCD Data Database
  xkcd-db:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_XKCD_USER}
      - POSTGRES_PASSWORD=${POSTGRES_XKCD_PASSWORD}
      - POSTGRES_DB=${POSTGRES_XKCD_DB}
    ports:
      - "5433:5432"
    volumes:
      - xkcd-db-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - airflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_XKCD_USER} -d ${POSTGRES_XKCD_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  airflow-db-data:  # Airflow metadata storage
  xkcd-db-data:     # XKCD data storage

networks:
  airflow-network:

